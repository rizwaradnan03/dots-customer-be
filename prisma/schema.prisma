generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Reservation {
  id                  String    @id @default(uuid())
  branch_id           String?
  destination_service Int?
  reason              String?
  attend_at_start     DateTime?
  attend_at_end       DateTime?
  created_at          DateTime? @db.Timestamp()
  created_by          Int?
  deleted_at          DateTime? @db.Timestamp()
  is_active           Boolean?  @default(false)

  tenants   tenants? @relation(fields: [tenant_id], references: [id])
  tenant_id Int?
}

model Savings {
  id                Int        @id @default(autoincrement())
  Customers         Customers? @relation(fields: [customer_id], references: [id])
  customer_id       Int?
  external_id       String?
  current_balance   Int?
  available_balance Int?
  status            Int?
  product_type      String?
  last_synced_at    DateTime   @db.Timestamp()
  created_by        Int?
  updated_by        Int?
  craated_at        DateTime?  @default(now())
  updated_at        DateTime?  @updatedAt
  deleted_at        DateTime?  @db.Timestamp()
}

model tenants {
  id                   Int     @id @default(autoincrement())
  public_id            String?
  name                 String?
  database_schema_name String?
  core_type            String?
  core_database_type   String?
  core_database_dsn    String?
  logo_url_base64      String?

  reservation Reservation[]
  users       Users[]
}

model Users {
  id                 Int        @id @default(autoincrement())
  is_active          Boolean?
  email              String?
  email_confirmed_at DateTime?  @db.Timestamp()
  username           String?
  password           String?
  last_name          String?
  first_name         String?
  created_at         DateTime?  @default(now())
  delete_at          DateTime?  @updatedAt
  account_officer_id String?    @default("CORPORATE")
  client_type        String?
  Customers          Customers? @relation(fields: [customer_id], references: [id])
  customer_id        Int?
  tenants            tenants?   @relation(fields: [tenant_id], references: [id])
  tenant_id          Int?
  branch_id          String?
}

model Customers {
  id                 Int       @id @default(autoincrement())
  external_id        String?
  full_name          String?
  identity_number    String?
  identity_type      String?
  email              String?
  phone_number       String?
  mobile_number      String?
  gender             String?
  address            String?
  subdistrict        String?
  district           String?
  mother_maiden_name String?
  referral_code      String?
  dati2_code         String?
  identity_photo_url String?
  selfie_photo_url   String?
  birth_place        String?
  birth_date         DateTime? @db.Date
  status             Int?
  last_synced_at     DateTime? @db.Timestamp()

  created_by Int?
  updated_by Int?
  deleted_by Int?

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  delete_at  DateTime? @db.Timestamp()
  users      Users[]
  savings    Savings[]
}

model Image {
  id           Int      @id @default(autoincrement())
  filename     String?
  isOnCarousel Boolean?
}
